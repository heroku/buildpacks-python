name: CI

on:
  push:
    # Avoid duplicate builds on PRs.
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Clippy
        run: cargo clippy --all-targets --locked -- --deny warnings
      - name: rustfmt
        run: cargo fmt -- --check

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Run unit tests
        run: cargo test --locked

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        builder: ["builder:24", "builder:22", "builder:20"]
        arch: ["amd64", "arm64"]
        exclude:
          - builder: "builder:22"
            arch: "arm64"
          - builder: "builder:20"
            arch: "arm64"
    runs-on: ${{ matrix.arch == 'arm64' && 'pub-hk-ubuntu-22.04-arm-medium' || 'ubuntu-latest' }}
    env:
      INTEGRATION_TEST_BUILDER: heroku/${{ matrix.builder }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install musl-tools
        run: sudo apt-get install -y --no-install-recommends musl-tools
      - name: Update Rust toolchain
        run: rustup update
      - name: Install Rust linux-musl target
        run: rustup target add ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-musl' || 'x86_64-unknown-linux-musl' }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.7.0
      - name: Pull builder image
        run: docker pull ${{ env.INTEGRATION_TEST_BUILDER }}
      # The integration tests are annotated with the `ignore` attribute, allowing us to run
      # only those and not the unit tests, via the `--ignored` option. On the latest stack
      # we run all integration tests, but on older stacks we only run stack-specific tests.
      - name: Run integration tests (all tests)
        if: matrix.builder == 'builder:24'
        run: cargo test --locked -- --ignored --test-threads $(($(nproc)+1))
      - name: Run integration tests (stack-specific tests only)
        if: matrix.builder != 'builder:24'
        run: cargo test --locked -- --ignored --test-threads $(($(nproc)+1)) 'python_version_test::'
